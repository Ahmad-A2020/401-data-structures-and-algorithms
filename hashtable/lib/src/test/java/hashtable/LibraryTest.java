/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hashtable;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    private HashTable<String,String> hashTable;
    private Library library;

    @BeforeEach
    void pickup(){
        hashTable= new HashTable<>();
        hashTable.add("Name","Ahmad");



    }
    // test add
    @Test
    void addTest(){
        assertTrue(hashTable.contain("Name"));
    }
    // test get
    @Test
    void getTest(){
        assertEquals("Ahmad",hashTable.get("Name"));
    }
    // test getnull
    @Test
    void getNullTest(){
        assertEquals(null,hashTable.get("age"));

    }

    @Test void someLibraryMethodReturnsTrue() {
        Library classUnderTest = new Library();
        assertTrue(classUnderTest.someLibraryMethod(), "someLibraryMethod should return 'true'");
    }

    // code challenge 30 test

    @Test
    void repeatWordTest(){
        String result= library.repeatedWord("Once upon a time, there was a brave princess who...");
        assertEquals("a",result);
    }

    @Test
    void repeatWordTest2(){
        String result= library.repeatedWord("It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, it was the epoch of incredulity, it was the season of Light, it was the season of Darkness, it was the spring of hope, it was the winter of despair, we had everything before us, we had nothing before us, we were all going direct to Heaven, we were all going direct the other way â€“ in short, the period was so far like the present period, that some of its noisiest authorities insisted on its being received, for good or for evil, in the superlative degree of comparison only...");
        assertEquals("it",result);
    }

}
